version: "3.8"

networks:
  {{ monitor_network }}:
    driver: overlay
    attachable: true
    name: {{ monitor_network }}
  {{ traefik_network }}:
    external: true
    name: {{ traefik_network }}

services:
  prometheus:
    user: "root:root"
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - {{ prometheus_data_path }}:/prometheus
      - {{ prometheus_config_path }}:/etc/prometheus/prometheus.yml
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - {{ monitor_network }}
      - {{ traefik_network }}
    logging:
      driver: json-file
      options:
        max-size: 50M
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.entrypoints=websecure"
        - "traefik.http.routers.prometheus.tls=true"
        - "traefik.http.routers.prometheus.rule=Host(`{{prometheus_app_name}}.{{app_domain_name}}`)"
        - "traefik.http.routers.prometheus.middlewares=auth"
        - "traefik.http.middlewares.auth.basicauth.users={{traefikpassword.stdout}}"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.docker.network={{traefik_network}}"
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  grafana:
    user: "root:root"
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - {{ grafana_data_path }}:/var/lib/grafana
    networks:
      - {{ monitor_network }}
      - {{ traefik_network }}
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_admin_password }}
    logging:
      driver: json-file
      options:
        max-size: 50M
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.routers.grafana.tls=true"
        - "traefik.http.routers.grafana.rule=Host(`{{grafana_app_name}}.{{app_domain_name}}`)"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.docker.network={{traefik_network}}"
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  node-exporter:
    image: prom/node-exporter:latest
    networks:
      - {{ monitor_network }}
    deploy:
      mode: global
      labels:
        - prometheus-job=node-exporter
    logging:
      driver: json-file
      options:
        max-size: 50M
    ports:
      - "9100:9100"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    networks:
      - {{ monitor_network }}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
    ports:
      - "8080:8080"
    logging:
      driver: json-file
      options:
        max-size: 50M
    deploy:
      mode: global
      labels:
        - prometheus-job=cadvisor

