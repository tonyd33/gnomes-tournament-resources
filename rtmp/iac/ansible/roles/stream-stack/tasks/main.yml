- name: Set up directories
  when: inventory_hostname == groups.master[0]
  file:
    path: "{{ item }}"
    state: directory
    mode: '755'
  loop:
    - "{{ rtmp_redis_data_path }}"
    - "{{ gluster_path }}/shared-resources"

- name: Copy keys
  copy:
    content: |
      [default]
      aws_access_key_id = {{ aws_access_key_id }}
      aws_secret_access_key = {{ aws_secret_access_key }}
    dest: "{{ gluster_path }}/shared-resources/aws-credentials"
  when: aws_access_key_id is defined and aws_secret_access_key is defined


- import_tasks: rtmp.yml
  when: rtmp_enabled

- name: Check stream key mark
  shell: |
    docker run \
      --rm \
      -it \
      --network {{ rtmp_network }} \
      --name redis-cli \
      redis \
      redis-cli -h redis GET MARK_GENERATED |\
    grep TRUE
  register: stream_key_generated
  failed_when: false
  changed_when: false

- name: Generate stream keys
  when: inventory_hostname == groups.master[0] and generate_stream_keys and stream_key_generated.rc != 0
  # No openssl in the redis image so we'll generate keys outside and mount
  # them.
  shell: |
    TMPFILE=$(mktemp)
    for i in $(seq 1 100); do
      openssl rand -hex 32 >> $TMPFILE
    done
    docker run \
      --rm \
      -it \
      --network {{ rtmp_network }} \
      --name redis-cli \
      -v $TMPFILE:/tmp/random-keys \
      redis \
      /bin/sh -c '
      while read line; do
        redis-cli -h redis SET $line $line
      done < /tmp/random-keys

      echo "Marking generated"
      redis-cli -h redis SET MARK_GENERATED TRUE
      '
  register: stk
