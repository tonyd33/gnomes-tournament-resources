networks:
  {{ rtmp_network }}:
    driver: overlay
    attachable: true
    name: {{ rtmp_network }}
  {{ traefik_network }}:
    external: true
    name: {{ traefik_network }}

services:
  redis:
    image: redis
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
    restart: unless-stopped
    networks:
      - {{ rtmp_network }}

  redisinsight:
    image: redis/redisinsight
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.redisinsight.entrypoints=websecure"
        - "traefik.http.routers.redisinsight.tls=true"
        - "traefik.http.routers.redisinsight.rule=Host(`{{redisinsight_app_name}}.{{app_domain_name}}`)"
        - "traefik.http.routers.redisinsight.middlewares=auth"
        - "traefik.http.middlewares.auth.basicauth.users={{traefikpassword.stdout}}"
        - "traefik.http.services.redisinsight.loadbalancer.server.port=5540"
        - "traefik.docker.network={{traefik_network}}"
    container_name: redisinsight
    ports:
      - 5540:5540
    depends_on:
      - redis
    networks:
      - {{ rtmp_network }}
      - {{ traefik_network }}

  rtmp-auth:
    image: "{{ rtmp_auth_image }}"
    depends_on:
      - redis
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 50M
    environment:
      - PORT=6570
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - {{ rtmp_network }}
    volumes:
      - "{{ stream_keys_path }}:/app/stream-keys"

  {{ rtmp_ingest_container }}:
    image: {{ nginx_rtmp_image }}
    depends_on:
      - rtmp-auth
    deploy:
      replicas: {{ rtmp_ingest_replicas }}
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 50M
    ports:
      - "{{ rtmp_ingress_port }}:{{ rtmp_port }}"
    networks:
      - {{ rtmp_network }}
    volumes:
      - "{{ rtmp_ingest_config_path }}:/etc/nginx/nginx.conf"

  {{ rtmp_recording_container }}:
    image: {{ nginx_rtmp_image }}
    depends_on:
      - rtmp-auth
    deploy:
      replicas: {{ rtmp_recording_replicas }}
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 50M
    networks:
      - {{ rtmp_network }}
    volumes:
      - "{{ recordings_path }}:/var/rtmp/recordings"
      - "{{ rtmp_recording_config_path }}:/etc/nginx/nginx.conf"

  {{ rtmp_playback_container }}:
    image: {{ nginx_rtmp_image }}
    depends_on:
      - rtmp-auth
    deploy:
      replicas: {{ rtmp_playback_replicas }}
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 50M
    networks:
      - {{ rtmp_network }}
    volumes:
      - "{{ rtmp_playback_config_path }}:/etc/nginx/nginx.conf"

  nginx:
    image: "{{ nginx_image }}"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 50M
    ports:
      # - "80:80"
      # - "443:443"
      - "{{ rtmp_egress_port }}:{{ rtmp_egress_port }}"
      - "{{ rtmps_egress_port }}:{{ rtmps_egress_port }}"
    networks:
      - {{ rtmp_network }}
    volumes:
      - "{{ ssl_cert_path }}:/etc/nginx/ssl/fullchain.pem"
      - "{{ ssl_key_path }}:/etc/nginx/ssl/privkey.pem"
      - "/root/stacks/nginx/nginx.conf:/etc/nginx/nginx.conf"
