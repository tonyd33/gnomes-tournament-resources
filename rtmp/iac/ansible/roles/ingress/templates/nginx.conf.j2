user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

stream {

  upstream rtmp {
    server {{ nginx_rtmp_container }}:{{ rtmp_ingress_port }};
  }

  server {
    listen {{ rtmp_ingress_port }};
    proxy_pass rtmp;
  }

  server {
    listen {{ rtmps_ingress_port }} ssl;
    proxy_pass rtmp;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  }
}

http {

  server {
      listen 80;
      server_name {{ portainer_app_name }}.{{ app_domain_name }};

      # Redirect HTTP to HTTPS
      return 301 https://$host$request_uri;
  }

  server {
      listen 443 ssl;
      server_name {{ portainer_app_name }}.{{ app_domain_name }};

      ssl_certificate /etc/nginx/ssl/fullchain.pem;
      ssl_certificate_key /etc/nginx/ssl/privkey.pem;

      # SSL settings (you can customize these as needed)
      ssl_protocols       TLSv1.2 TLSv1.3;
      ssl_ciphers         'HIGH:!aNULL:!MD5';
      ssl_prefer_server_ciphers on;
      ssl_session_cache shared:SSL:10m;

      location / {
          proxy_pass http://{{ portainer_container_name }}:{{ portainer_admin_port }};
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          # WebSocket support
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $http_connection;
      }
  }

  server {
      listen 80;
      server_name rtmp.{{ app_domain_name }};

      # Redirect HTTP to HTTPS
      return 301 https://$host$request_uri;
  }

  server {
      listen 443 ssl;
      server_name rtmp.{{ app_domain_name }};

      ssl_certificate /etc/nginx/ssl/fullchain.pem;
      ssl_certificate_key /etc/nginx/ssl/privkey.pem;

      # SSL settings (you can customize these as needed)
      ssl_protocols       TLSv1.2 TLSv1.3;
      ssl_ciphers         'HIGH:!aNULL:!MD5';
      ssl_prefer_server_ciphers on;
      ssl_session_cache shared:SSL:10m;

      location /hls {
          proxy_pass http://{{ nginx_rtmp_container }}:8080;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          # WebSocket support
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $http_connection;
      }
  }
}
